openapi: 3.1.0
info:
  title: "YStream API"
  description: "YStream API is a RESTful API for our streaming video service."
  contact:
    name: "YStream"
    email: "dev@ystream.com"
  version: "1.6.0"
servers:
  - url: "http://localhost:3000/"
    description: "Production server"
    variables:
      protocol:
        enum:
          - "http"
        default: "http"

tags:
  - name: "Users"
    description: "Operations about users"
  - name: "Videos"
    description: "Operations about videos"
  - name: "Comments"
    description: "Operations about comments"
  - name: "Category"
    description: "Operations about categories"
  - name: "Channels"
    description: "Operations about channels"
  - name: "Historics"
    description: "Operations about historics"
  - name: "Rôles"
    description: "Operations about rôles"
  - name: "Notifications"
    description: "Operations about notifications"

paths:
  /users:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Users"
      summary: "Get all users"
      description: "Get all users"
      operationId: "getUsers"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
    post:
      security:
        - bearerAuth: []
      tags:
        - "Users"
      summary: "Create user"
      description: "Create user"
      operationId: "createUser"
      requestBody:
        description: "User object that needs to be added"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /users/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Users"
      summary: "Get user by id"
      description: "Get user by id"
      operationId: "getUserById"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of user to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    put:
      security:
        - bearerAuth: []
      tags:
        - "Users"
      summary: "Update user"
      description: "Update user"
      operationId: "updateUser"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of user to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        description: "User object that needs to be added"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    delete:
      security:
        - bearerAuth: []
      tags:
        - "Users"
      summary: "Delete user"
      description: "Delete user"
      operationId: "deleteUser"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of user to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /user/username/{username}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Users"
      summary: "Get user by username"
      description: "Get user by username"
      operationId: "getUserByUsername"
      parameters:
        - name: "username"
          in: "path"
          description: "Username of user to return"
          required: true
          schema:
            type: "string"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /users/login:
    post:
      tags:
        - "Users"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      requestBody:
        description: "The user object that needs to be logged in"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        '200':
          description: "Successful operation"
          headers:
            X-Rate-Limit:
              description: "calls per hour allowed by the user"
              schema:
                type: "integer"
                format: "int32"
              example: 1000
            X-Expires-After:
              description: "date in UTC when token expires"
              schema:
                type: "string"
                format: "date-time"
              example: "2021-01-01T00:00:00.000Z"
          content:
            application/json:
              schema:
                type: "string"
                format: "string"
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
        '400':
          description: "Invalid username/password supplied"
  /users/sub/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Users"
      summary: "Get user by sub"
      description: "Get user by sub"
      operationId: "getUserBySub"
      parameters:
        - name: "id"
          in: "path"
          description: "Sub of user to return"
          required: true
          schema:
            type: "string"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '500':
          description: Internal server error
    patch:
      security:
        - bearerAuth: []
      tags:
        - "Users"
      summary: "Update user sub"
      description: "Update user sub"
      operationId: "updateUserSub"
      parameters:
        - name: "id"
          in: "path"
          description: "Sub of user to return"
          required: true
          schema:
            type: "string"
      requestBody:
        description: "User object that needs to be added"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '500':
          description: Internal server error
  /videos:
    get:
      tags:
        - "Videos"
      summary: "Get all videos"
      description: "Get all videos"
      operationId: "getVideos"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Video"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
    post:
      security:
        - bearerAuth: []
      tags:
        - "Videos"
      summary: "Create video"
      description: "Create video"
      operationId: "createVideo"
      requestBody:
        description: "Video object that needs to be added"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Video"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Video"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /videos/{id}:
    get:
      tags:
        - "Videos"
      summary: "Get video by id"
      description: "Get video by id"
      operationId: "getVideoById"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of video to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Video"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    put:
      security:
        - bearerAuth: []
      tags:
        - "Videos"
      summary: "Update video"
      description: "Update video"
      operationId: "updateVideo"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of video to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        description: "Video object that needs to be added"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Video"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Video"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    delete:
      security:
        - bearerAuth: []
      tags:
        - "Videos"
      summary: "Delete video"
      description: "Delete video"
      operationId: "deleteVideo"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of video to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Video"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /videos/channel/{id}:
    get:
      tags:
        - "Videos"
      summary: "Get video by channel id"
      description: "Get video by channel id"
      operationId: "getVideoByChannelId"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of channel to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Video"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /videos/search/{search}:
    get:
      tags:
        - "Videos"
      summary: "Get video by search"
      description: "Get video by search"
      operationId: "getVideoBySearch"
      parameters:
        - name: "search"
          in: "path"
          description: "Search of video to return"
          required: true
          schema:
            type: "string"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Video"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
  /videos/comments/{id}:
    get:
      tags:
        - "Videos"
      summary: "Get video by comments id"
      description: "Get video by comments id"
      operationId: "getVideoByCommentsId"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of comments to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
  /roles:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Rôles"
      summary: "Get all rôles"
      description: "Get all rôles"
      operationId: "getRôles"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Rôles"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
    post:
      security:
        - bearerAuth: []
      tags:
        - "Rôles"
      summary: "Create rôles"
      description: "Create rôles"
      operationId: "createRôles"
      requestBody:
        description: "Rôles object that needs to be added"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rôles"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rôles"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /roles/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Rôles"
      summary: "Get rôles by id"
      description: "Get rôles by id"
      operationId: "getRôlesById"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of rôles to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rôles"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    put:
      security:
        - bearerAuth: []
      tags:
        - "Rôles"
      summary: "Update rôles"
      description: "Update rôles"
      operationId: "updateRôles"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of rôles to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        description: "Rôles object that needs to be added"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rôles"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rôles"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    delete:
      security:
        - bearerAuth: []
      tags:
        - "Rôles"
      summary: "Delete rôles"
      description: "Delete rôles"
      operationId: "deleteRôles"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of rôles to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rôles"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /category:
    get:
      tags:
        - "Category"
      summary: "Get all category"
      description: "Get all category"
      operationId: "getCategory"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
    post:
      security:
        - bearerAuth: []
      tags:
        - "Category"
      summary: "Create category"
      description: "Create category"
      operationId: "createCategory"
      requestBody:
        description: "Category object that needs to be added"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /category/{id}:
    get:
      tags:
        - "Category"
      summary: "Get category by id"
      description: "Get category by id"
      operationId: "getCategoryById"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of category to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    put:
      security:
        - bearerAuth: []
      tags:
        - "Category"
      summary: "Update category"
      description: "Update category"
      operationId: "updateCategory"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of category to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        description: "Category object that needs to be added"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    delete:
      security:
        - bearerAuth: []
      tags:
        - "Category"
      summary: "Delete category"
      description: "Delete category"
      operationId: "deleteCategory"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of category to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /channel:
    get:
      tags:
        - "Channels"
      summary: "Get all channels"
      description: "Get all channels"
      operationId: "getChannels"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Channels"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
    post:
      security:
        - bearerAuth: []
      tags:
        - "Channels"
      summary: "Create channel"
      description: "Create channel"
      operationId: "createChannel"
      requestBody:
        description: "Channel object that needs to be added"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channels"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channels"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /channel/{id}:
    get:
      tags:
        - "Channels"
      summary: "Get channel by id"
      description: "Get channel by id"
      operationId: "getChannelById"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of channel to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channels"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    put:
      security:
        - bearerAuth: []
      tags:
        - "Channels"
      summary: "Update channel"
      description: "Update channel"
      operationId: "updateChannel"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of channel to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        description: "Channel object that needs to be added"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channels"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channels"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
    delete:
      security:
        - bearerAuth: []
      tags:
        - "Channels"
      summary: "Delete channel"
      description: "Delete channel"
      operationId: "deleteChannel"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of channel to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
  /channel/search/{name}:
    get:
      tags:
        - "Channels"
      summary: "Get channel by name"
      description: "Get channel by name"
      operationId: "getChannelByName"
      parameters:
        - name: "name"
          in: "path"
          description: "Name of channel to return"
          required: true
          schema:
            type: "string"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channels"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
  /channel/category/{id}:
    get:
      tags:
        - "Channels"
      summary: "Get channel by category id"
      description: "Get channel by category id"
      operationId: "getChannelByCategoryId"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of category to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Channels"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /channel/user/{id}:
    get:
      tags:
        - "Channels"
      summary: "Get channel by user id"
      description: "Get channel by user id"
      operationId: "getChannelByUserId"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of user to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Channels"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /channel/view/{id}:
    get:
      tags:
        - "Channels"
      summary: "Get channel by view id"
      description: "Get channel by view id"
      operationId: "getChannelByViewId"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of view to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
  /channel/like/{id}:
    get:
      tags:
        - "Channels"
      summary: "Get channel by like id"
      description: "Get channel by like id"
      operationId: "getChannelByLikeId"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of like to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
  /notifications:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Notifications"
      summary: "Get all notifications"
      description: "Get all notifications"
      operationId: "getNotifications"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Notifications"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
    post:
      security:
        - bearerAuth: []
      tags:
        - "Notifications"
      summary: "Create notifications"
      description: "Create notifications"
      operationId: "createNotifications"
      requestBody:
        description: "Notifications object that needs to be added"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notifications"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notifications"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /notifications/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Notifications"
      summary: "Get notifications by id"
      description: "Get notifications by id"
      operationId: "getNotificationsById"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of notifications to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    delete:
      security:
        - bearerAuth: []
      tags:
        - "Notifications"
      summary: "Delete notifications"
      description: "Delete notifications"
      operationId: "deleteNotifications"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of notifications to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
  /notifications/user/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Notifications"
      summary: "Get notifications by user id"
      description: "Get notifications by user id"
      operationId: "getNotificationsByUserId"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of user to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /historics:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Historics"
      summary: "Get all historics"
      description: "Get all historics"
      operationId: "getHistorics"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Historics"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
    post:
      security:
        - bearerAuth: []
      tags:
        - "Historics"
      summary: "Create historics"
      description: "Create historics"
      operationId: "createHistorics"
      requestBody:
        description: "Historics object that needs to be added"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Historics"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Historics"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /historics/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Historics"
      summary: "Get historics by id"
      description: "Get historics by id"
      operationId: "getHistoricsById"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of historics to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '500':
          description: Internal server error
    delete:
      security:
        - bearerAuth: []
      tags:
        - "Historics"
      summary: "Delete historics"
      description: "Delete historics"
      operationId: "deleteHistorics"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of historics to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '204':
          description: "Successful operation"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '500':
          description: Internal server error
  /historics/user/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Historics"
      summary: "Get historics by user id"
      description: "Get historics by user id"
      operationId: "getHistoricsByUserId"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of user to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /comments:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Comments"
      summary: "Get all comments"
      description: "Get all comments"
      operationId: "getComments"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comments"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
    post:
      security:
        - bearerAuth: []
      tags:
        - "Comments"
      summary: "Create comments"
      description: "Create comments"
      operationId: "createComments"
      requestBody:
        description: "Comments object that needs to be added"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comments"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comments"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /comments/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Comments"
      summary: "Get comments by id"
      description: "Get comments by id"
      operationId: "getCommentsById"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of comments to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '500':
          description: Internal server error
    put:
      security:
        - bearerAuth: []
      tags:
        - "Comments"
      summary: "Update comments"
      description: "Update comments"
      operationId: "updateComments"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of comments to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        description: "Comments object that needs to be added"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comments"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comments"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '500':
          description: Internal server error
    delete:
      security:
        - bearerAuth: []
      tags:
        - "Comments"
      summary: "Delete comments"
      description: "Delete comments"
      operationId: "deleteComments"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of comments to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '204':
          description: "Successful operation"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
        '500':
          description: Internal server error
  /comments/user/{id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - "Comments"
      summary: "Get comments by user id"
      description: "Get comments by user id"
      operationId: "getCommentsByUserId"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of user to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: "Successful operation"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Login:
        type: object
        properties:
          username:
            type: string
            description: "User username"
            required: true
          password:
            type: string
            format: password
            description: "User password"
            required: true
    User:
        type: object
        properties:
          firstName:
            type: string
            description: "User firstname"
            required: false
          lastName:
            type: string
            description: "User lastname"
            required: false
          email:
            type: string
            format: email
            description: "User email"
            required: true
          dateOfBirth:
            type: string
            format: date
            description: "User date of birth"
            required: true
          username:
            type: string
            description: "User username"
            required: true
          password:
            type: string
            format: password
            description: "User password"
            required: true
          createdAt:
            type: string
            format: date-time
            description: "User creation date"
          sub:
            type: array
            format: string
            description: "User sub"
            required: false
          language:
            type: string
            format: language
            description: "User language"
            required: false
          profileImage:
            type: string
            description: "User profile image"
            required: false
    Video:
        type: object
        properties:
          title:
            type: string
            description: "Video title"
            required: true
          createdAt:
            type: string
            format: date
            description: "Video creation date"
          view:
            type: integer
            format: int64
            description: "Video view"
            default: 0
          like:
            type: integer
            format: int64
            description: "Video like"
            default: 0
          dislike:
            type: integer
            format: int64
            description: "Video dislike"
            default: 0
          description:
            type: string
            description: "Video description"
          language:
            type: string
            format: language
            description: "Video language"
            required: true
          time:
            type: string
            format: number
            description: "Video time"
            required: true
          img:
            type: string
            description: "Video image"
            required: true
          url:
            type: string
            format: url
            description: "Video url"
          urllocal:
            type: string
            format: url
            description: "Video url local"
          idComment:
            type: array
            format: string
            description: "Video comment id"
          idChannel:
            type: string
            format: string
            description: "Video channel id"
          idCategory:
            type: array
            format: string
            description: "Video category id"
    Rôles:
        type: object
        properties:
          name:
            type: string
            description: "Rôles name"
            required: true
          permission:
            type: array
            format: string
            description: "Rôles permission"
          idUser:
            type: array
            format: string
            description: "Rôles user id"
    Notifications:
        type: object
        properties:
          title:
            type: string
            description: "Notification title"
            required: true
          description:
            type: string
            description: "Notification description"
            required: true
          url:
            type: string
            format: url
            description: "Notification url"
            required: true
          type:
            type: string
            description: "Notification type"
            required: true
          idUser:
            type: string
            format: string
            description: "ObjectID of user"
    Historics:
        type: object
        properties:
          idUser:
            type: string
            format: string
            description: "ObjectID of user"
          idVideo:
            type: array
            format: string
            description: "Array of string of video id"
    Comments:
        type: object
        properties:
          texte:
            type: string
            description: "Comment texte"
            required: true
          like:
            type: integer
            format: int64
            description: "Comment like"
            default: 0
          dislike:
            type: integer
            format: int64
            description: "Comment dislike"
            default: 0
          createdAt:
            type: string
            format: date
            description: "Comment creation date"
          idVideo:
            type: string
            format: string
            description: "ObjectID of video"
          idUser:
            type: string
            format: string
            description: "ObjectID of user"
    Channels:
        type: object
        properties:
          name:
            type: string
            description: "Channel name"
            required: true
          description:
            type: string
            description: "Channel description"
            required: true
          image:
            type: string
            format: binary
            description: "ObjectID of file image"
            required: true
          subNumber:
            type: integer
            format: int64
            description: "Channel sub number"
            default: 0
          idCategory:
            type: array
            format: string
            description: "Channel category id"
          idVideos:
            type: array
            format: string
            description: "Channel video id"
    Category:
        type: object
        properties:
          name:
            type: string
            description: "Category name"
            required: true
          image:
            type: string
            format: string
            description: "ObjectID of image file"
            required: true
    file:
        type: object
        properties:
          filename:
            type: string
            description: "File name"
            required: true
          contentType:
            type: string
            description: "File type"
            required: true
          lenght:
            type: int64
            description: "File size"
            required: true
          chunkSize:
            type: int64
            description: "File path"
            required: true
          uploadDate:
            type: date
            description: "File upload date"
            required: true
          md5:
            type: string
            description: "File md5"
            required: true